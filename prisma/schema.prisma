generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique(map: "email") @db.VarChar(255)
  name       String    @db.VarChar(255)
  score      Int?      @default(0)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  orders     Order[]

  @@map("User")
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(255)
  category    String      @db.VarChar(100)
  price       Decimal       @db.Decimal(10, 2)
  stock       Int?        @default(0)
  created_at  DateTime?   @default(now()) @db.Timestamp(0)
  order_items OrderItem[]

  @@index([category], map: "idx_product_category")
  @@map("Product")
}

model Order {
  id           Int         @id @default(autoincrement())
  user_id      Int?
  total_amount Decimal     @db.Decimal(10, 2)
  status       String?     @default("pending") @db.VarChar(50)
  created_at   DateTime?   @default(now()) @db.Timestamp(0)
  user         User?       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_ibfk_1")
  order_items  OrderItem[]

  @@index([user_id], map: "idx_order_user_id")
  @@map("Order")
}

model OrderItem {
  id         Int       @id @default(autoincrement())
  order_id   Int?
  product_id Int?
  quantity   Int
  unit_price Decimal   @db.Decimal(10, 2)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  order      Order?    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orderitem_ibfk_1")
  product    Product?  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orderitem_ibfk_2")

  @@index([order_id], map: "idx_orderitem_order_id")
  @@index([product_id], map: "idx_orderitem_product_id")
  @@map("OrderItem")
}
